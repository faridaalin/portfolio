{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/emailjs-com/source/index.js","../node_modules/emailjs-com/source/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/source/services/ui/UI.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../src/utils/isHTMLElement.ts","../../src/constants.ts","../../src/logic/attachEventListeners.ts","../../src/utils/isNullOrUndefined.ts","../../src/utils/isArray.ts","../../src/utils/isObject.ts","../../src/utils/isKey.ts","../../src/utils/stringToPath.ts","../../src/utils/set.ts","../../src/logic/transformToNestObject.ts","../../src/utils/isUndefined.ts","../../src/utils/unique.ts","../../src/utils/get.ts","../../src/logic/focusOnErrorField.ts","../../src/logic/removeAllEventListeners.ts","../../src/logic/getRadioValue.ts","../../src/utils/isRadioInput.ts","../../src/utils/isFileInput.ts","../../src/utils/isCheckBoxInput.ts","../../src/utils/isMultipleSelect.ts","../../src/logic/getCheckboxValue.ts","../../src/logic/getFieldValue.ts","../../src/logic/getMultipleSelectValue.ts","../../src/utils/isDetached.ts","../../src/utils/isEmptyObject.ts","../../src/utils/unset.ts","../../src/logic/findRemovedFieldAndRemoveListener.ts","../../src/utils/isString.ts","../../src/logic/getFieldsValues.ts","../../src/utils/isSameError.ts","../../src/logic/shouldRenderBasedOnError.ts","../../src/utils/isRegex.ts","../../src/logic/getValueAndMessage.ts","../../src/utils/isFunction.ts","../../src/utils/isBoolean.ts","../../src/utils/isMessage.ts","../../src/logic/getValidateError.ts","../../src/logic/appendErrors.ts","../../src/logic/validateField.ts","../../src/utils/isPrimitive.ts","../../src/utils/getPath.ts","../../src/logic/assignWatchFields.ts","../../src/logic/skipValidation.ts","../../src/logic/getFieldArrayParentName.ts","../../src/logic/getIsFieldsDifferent.ts","../../src/logic/isNameInFieldArray.ts","../../src/utils/isSelectInput.ts","../../src/utils/onDomRemove.ts","../../src/utils/validationModeChecker.ts","../../src/utils/isRadioOrCheckbox.ts","../../src/useForm.ts","../../src/useFormContext.tsx"],"names":["_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","_slicedToArray","arr","i","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","_arrayLikeToArray","len","arr2","defineProperty","exports","EmailJSResponseStatus","sendForm","send","init","EmailJSResponseStatus_1","require","enumerable","get","UI_1","_userID","_origin","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","key","addEventListener","event","responseStatus","target","status","text","open","setRequestHeader","appendGoogleCaptcha","templatePrams","element","document","getElementById","userID","origin","serviceID","templateID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","form","selector","querySelector","nodeName","UI","progressState","formData","FormData","append","then","response","successState","error","errorState","default","httpResponse","this","responseText","clearAll","classList","remove","PROGRESS","DONE","ERROR","add","module","runtime","Op","hasOwn","hasOwnProperty","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","obj","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_toConsumableArray","arrayLikeToArray","_defineProperty","configurable","writable","HTMLElement","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","isHTMLElement","isObjectType","isNullOrUndefined","input","replace","match","mathNumber","mathQuote","originalString","set","path","index","tempPath","isKey","stringToPath","lastIndex","newValue","objValue","isObject","entries","reduce","previous","val","filter","Boolean","defaultValue","unique","split","isUndefined","fields","fieldErrors","field","focus","options","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","option","checked","defaultResult","validResult","map","attributes","getFieldValue","fieldsRef","unmountFieldsStateRef","current","isFileInput","files","isRadioInput","getRadioValue","isMultipleSelect","selected","isCheckBox","getCheckboxValue","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","unset","updatePath","childObject","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isEmptyObject","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","isCheckBoxInput","removeAllEventListeners","disconnect","search","output","isString","startsWith","find","types","message","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","RegExp","validationData","isRegex","getValidateError","isBoolean","validateAllFieldCriteria","a","required","maxLength","minLength","min","max","pattern","validate","isRadio","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","getValueAndMessage","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","Date","maxLengthValue","minLengthValue","inputLength","patternValue","patternMessage","getFieldsValue","validateRef","isFunction","validateError","validationResult","validateFunction","validateResult","getPath","pathWithIndex","isPrimitive","getInnerPath","flat","Infinity","fieldValues","fieldName","watchFields","inputValue","isSingleField","isOnBlur","isOnChange","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","substring","indexOf","getIsFieldsDifferent","referenceArray","differenceArray","dataA","dataB","isMatchFieldArrayName","searchName","names","some","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","childList","subtree","mode","isOnSubmit","isOnAll","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","defaultValues","shouldFocusError","criteriaMode","React.useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","Set","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","React.useState","render","modeChecker","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","reRender","React.useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","previousIsDirty","getValues","getFieldArrayParentName","executeValidation","skipReRender","validateField","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","getFieldsValues","shouldSkipValidation","skipValidation","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","assignWatchFields","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isRadioOrCheckboxFunction","isEmptyDefaultValue","isEmptyUnmountFields","isSelectInput","register","refOrValidationOptions","rules","handleSubmit","callback","e","preventDefault","persist","fieldError","focusOnErrorField","resetRefs","omitResetState","inputRef","closest","resetFieldArray","React.useEffect","formState","commonProps","prop","control","validateSchemaIsValid","FormContext","React.createContext"],"mappings":"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","file":"static/js/6.5152daea.chunk.js","sourcesContent":["import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = exports.sendForm = exports.send = exports.init = void 0;\nvar EmailJSResponseStatus_1 = require(\"./models/EmailJSResponseStatus\");\nObject.defineProperty(exports, \"EmailJSResponseStatus\", { enumerable: true, get: function () { return EmailJSResponseStatus_1.EmailJSResponseStatus; } });\nvar UI_1 = require(\"./services/ui/UI\");\nvar _userID = null;\nvar _origin = 'https://api.emailjs.com';\nfunction sendPost(url, data, headers) {\n    if (headers === void 0) { headers = {}; }\n    return new Promise(function (resolve, reject) {\n        var xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', function (event) {\n            var responseStatus = new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', function (event) {\n            reject(new EmailJSResponseStatus_1.EmailJSResponseStatus(event.target));\n        });\n        xhr.open('POST', url, true);\n        for (var key in headers) {\n            xhr.setRequestHeader(key, headers[key]);\n        }\n        xhr.send(data);\n    });\n}\nfunction appendGoogleCaptcha(templatePrams) {\n    var element = document && document.getElementById('g-recaptcha-response');\n    if (element && element.value) {\n        templatePrams['g-recaptcha-response'] = element.value;\n    }\n    element = null;\n    return templatePrams;\n}\nfunction fixIdSelector(selector) {\n    if (selector[0] !== '#') {\n        return '#' + selector;\n    }\n    return selector;\n}\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nfunction init(userID, origin) {\n    _userID = userID;\n    _origin = origin || 'https://api.emailjs.com';\n}\nexports.init = init;\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {Object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction send(serviceID, templateID, templatePrams, userID) {\n    var params = {\n        lib_version: '2.6.3',\n        user_id: userID || _userID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: appendGoogleCaptcha(templatePrams)\n    };\n    return sendPost(_origin + '/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json'\n    });\n}\nexports.send = send;\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nfunction sendForm(serviceID, templateID, form, userID) {\n    if (typeof form === 'string') {\n        form = document.querySelector(fixIdSelector(form));\n    }\n    if (!form || form.nodeName !== 'FORM') {\n        throw 'Expected the HTML form element or the style selector of form';\n    }\n    UI_1.UI.progressState(form);\n    var formData = new FormData(form);\n    formData.append('lib_version', '2.6.3');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', userID || _userID);\n    return sendPost(_origin + '/api/v1.0/email/send-form', formData)\n        .then(function (response) {\n        UI_1.UI.successState(form);\n        return response;\n    }, function (error) {\n        UI_1.UI.errorState(form);\n        return Promise.reject(error);\n    });\n}\nexports.sendForm = sendForm;\nexports.default = {\n    init: init,\n    send: send,\n    sendForm: sendForm\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EmailJSResponseStatus = void 0;\nvar EmailJSResponseStatus = /** @class */ (function () {\n    function EmailJSResponseStatus(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n    return EmailJSResponseStatus;\n}());\nexports.EmailJSResponseStatus = EmailJSResponseStatus;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UI = void 0;\nvar UI = /** @class */ (function () {\n    function UI() {\n    }\n    UI.clearAll = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.remove(this.DONE);\n        form.classList.remove(this.ERROR);\n    };\n    UI.progressState = function (form) {\n        this.clearAll(form);\n        form.classList.add(this.PROGRESS);\n    };\n    UI.successState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.DONE);\n    };\n    UI.errorState = function (form) {\n        form.classList.remove(this.PROGRESS);\n        form.classList.add(this.ERROR);\n    };\n    UI.PROGRESS = 'emailjs-sending';\n    UI.DONE = 'emailjs-success';\n    UI.ERROR = 'emailjs-error';\n    return UI;\n}());\nexports.UI = UI;\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { ValidationMode } from './types/form';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n  CHANGE: 'change',\n  INPUT: 'input',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  all: 'all',\n};\n\nexport const VALUE = 'value';\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Field } from '../types/form';\n\nexport default function attachEventListeners(\n  { ref }: Field,\n  shouldAttachChangeEvent: boolean,\n  handleChange?: EventListenerOrEventListenerObject,\n): void {\n  if (isHTMLElement(ref) && handleChange) {\n    ref.addEventListener(\n      shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT,\n      handleChange,\n    );\n    ref.addEventListener(EVENTS.BLUR, handleChange);\n  }\n}\n","export default (value: unknown): value is null | undefined => value == null;\n","export default <T>(value: unknown): value is T[] => Array.isArray(value);\n","import isNullOrUndefined from './isNullOrUndefined';\nimport isArray from './isArray';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n","import isArray from './isArray';\n\nexport default (value: [] | string) =>\n  !isArray(value) &&\n  (/^\\w*$/.test(value) ||\n    !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n","export default (input: string): (string | number)[] => {\n  const result: (string | number)[] = [];\n\n  input.replace(\n    /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,\n    (\n      match: string,\n      mathNumber: string,\n      mathQuote: string,\n      originalString: string,\n    ): any => {\n      result.push(\n        mathQuote\n          ? originalString.replace(/\\\\(\\\\)?/g, '$1')\n          : mathNumber || match,\n      );\n    },\n  );\n\n  return result;\n};\n","import isObject from './isObject';\nimport isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types/form';\n\nexport default function set(object: FieldValues, path: string, value: any) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue: string | object = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types/form';\n\nexport default (data: FieldValues): any =>\n  Object.entries(data).reduce(\n    (previous: FieldValues, [key, value]): FieldValues => {\n      if (!isKey(key)) {\n        set(previous, key, value);\n        return previous;\n      }\n\n      return { ...previous, [key]: value };\n    },\n    {},\n  );\n","export default (val: unknown): val is undefined => val === undefined;\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport unique from './unique';\n\nexport default (obj: any, path: string, defaultValue?: any) => {\n  const result = unique(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","import get from '../utils/get';\nimport { FieldErrors, FieldRefs } from '../types/form';\n\nexport default <TFieldValues>(\n  fields: FieldRefs<TFieldValues>,\n  fieldErrors: FieldErrors<TFieldValues>,\n) => {\n  for (const key in fields) {\n    if (get(fieldErrors, key)) {\n      const field = fields[key];\n\n      if (field) {\n        if (field.ref.focus) {\n          field.ref.focus();\n\n          break;\n        } else if (field.options) {\n          field.options[0].ref.focus();\n\n          break;\n        }\n      }\n    }\n  }\n};\n","import isHTMLElement from '../utils/isHTMLElement';\nimport { EVENTS } from '../constants';\nimport { Ref } from '../types/form';\n\nexport default (\n  ref: Ref,\n  validateWithStateUpdate: EventListenerOrEventListenerObject,\n): void => {\n  if (isHTMLElement(ref) && ref.removeEventListener) {\n    ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\n    ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\n  }\n};\n","import isArray from '../utils/isArray';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype RadioFieldResult = {\n  isValid: boolean;\n  value: number | string;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: '',\n};\n\nexport default (options?: RadioOrCheckboxOption[]): RadioFieldResult =>\n  isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.ref.checked\n            ? {\n                isValid: true,\n                value: option.ref.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types/form';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { RadioOrCheckboxOption } from '../types/form';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: RadioOrCheckboxOption[]): CheckboxFieldResult => {\n  if (isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.ref.checked)\n        .map(({ ref: { value } }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0].ref;\n\n    return checked\n      ? attributes && !isUndefined((attributes as any).value)\n        ? isUndefined(value) || value === ''\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport { FieldRefs, FieldValues, InternalFieldName } from '../types/form';\n\nexport default function getFieldValue<TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  name: InternalFieldName<TFieldValues>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n) {\n  const field = fieldsRef.current[name]!;\n\n  if (field) {\n    const {\n      ref: { value },\n      ref,\n    } = field;\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field.options).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field.options).value;\n    }\n\n    return value;\n  }\n\n  if (unmountFieldsStateRef) {\n    return unmountFieldsStateRef.current[name];\n  }\n}\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { Ref } from '../types/form';\n\nexport default function isDetached(element: Ref): boolean {\n  if (!element) {\n    return true;\n  }\n\n  if (\n    !(element instanceof HTMLElement) ||\n    element.nodeType === Node.DOCUMENT_NODE\n  ) {\n    return false;\n  }\n\n  return isDetached(element.parentNode as Ref);\n}\n","import isObject from './isObject';\nimport { EmptyObject } from '../types/utils';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import isArray from './isArray';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const path = updatePath.slice(0, -1);\n  const length = path.length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef = undefined;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef = undefined;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (isArray(objectRef) &&\n            !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\n              .length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import * as React from 'react';\nimport removeAllEventListeners from './removeAllEventListeners';\nimport getFieldValue from './getFieldValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isDetached from '../utils/isDetached';\nimport isArray from '../utils/isArray';\nimport unset from '../utils/unset';\nimport unique from '../utils/unique';\nimport isUndefined from '../utils/isUndefined';\nimport { Field, FieldRefs, FieldValues, Ref } from '../types/form';\n\nconst isSameRef = (fieldValue: Field, ref: Ref) =>\n  fieldValue && fieldValue.ref === ref;\n\nexport default function findRemovedFieldAndRemoveListener<\n  TFieldValues extends FieldValues\n>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  handleChange: ({ type, target }: Event) => Promise<void | boolean>,\n  field: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n  shouldUnregister?: boolean,\n  forceDelete?: boolean,\n): void {\n  const {\n    ref,\n    ref: { name, type },\n    mutationWatcher,\n  } = field;\n  const fieldRef = fieldsRef.current[name] as Field;\n\n  if (!shouldUnregister) {\n    const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n\n    if (!isUndefined(value)) {\n      unmountFieldsStateRef.current[name] = value;\n    }\n  }\n\n  if (!type) {\n    delete fieldsRef.current[name];\n    return;\n  }\n\n  if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\n    const { options } = fieldRef;\n\n    if (isArray(options) && options.length) {\n      unique(options).forEach((option, index): void => {\n        const { ref, mutationWatcher } = option;\n        if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\n          removeAllEventListeners(ref, handleChange);\n\n          if (mutationWatcher) {\n            mutationWatcher.disconnect();\n          }\n\n          unset(options, `[${index}]`);\n        }\n      });\n\n      if (options && !unique(options).length) {\n        delete fieldsRef.current[name];\n      }\n    } else {\n      delete fieldsRef.current[name];\n    }\n  } else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\n    removeAllEventListeners(ref, handleChange);\n\n    if (mutationWatcher) {\n      mutationWatcher.disconnect();\n    }\n\n    delete fieldsRef.current[name];\n  }\n}\n","export default (value: unknown): value is string => typeof value === 'string';\n","import * as React from 'react';\nimport getFieldValue from './getFieldValue';\nimport isString from '../utils/isString';\nimport isArray from '../utils/isArray';\nimport isUndefined from '../utils/isUndefined';\nimport { InternalFieldName, FieldValues, FieldRefs } from '../types/form';\nimport transformToNestObject from './transformToNestObject';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  unmountFieldsStateRef?: React.MutableRefObject<Record<string, any>>,\n  search?:\n    | InternalFieldName<TFieldValues>\n    | InternalFieldName<TFieldValues>[]\n    | { nest: boolean },\n) => {\n  const output = {} as TFieldValues;\n\n  for (const name in fieldsRef.current) {\n    if (\n      isUndefined(search) ||\n      (isString(search)\n        ? name.startsWith(search)\n        : isArray(search) && search.find((data) => name.startsWith(data)))\n    ) {\n      output[name as InternalFieldName<TFieldValues>] = getFieldValue(\n        fieldsRef,\n        name,\n      );\n    }\n  }\n\n  return {\n    ...transformToNestObject((unmountFieldsStateRef || {}).current || {}),\n    ...transformToNestObject(output),\n  };\n};\n","import isObject from './isObject';\nimport { FieldError } from '../types/form';\n\nexport default (\n  error: FieldError | undefined,\n  { type, types = {}, message }: FieldError,\n): boolean =>\n  isObject(error) &&\n  error.type === type &&\n  error.message === message &&\n  Object.keys(error.types || {}).length === Object.keys(types).length &&\n  Object.entries(error.types || {}).every(\n    ([key, value]) => types[key] === value,\n  );\n","import isEmptyObject from '../utils/isEmptyObject';\nimport isSameError from '../utils/isSameError';\nimport get from '../utils/get';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default function shouldRenderBasedOnError<\n  TFieldValues extends FieldValues\n>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FlatFieldErrors<TFieldValues>;\n  name: InternalFieldName<TFieldValues>;\n  validFields: Set<InternalFieldName<TFieldValues>>;\n  fieldsWithValidation: Set<InternalFieldName<TFieldValues>>;\n}): boolean {\n  const isFieldValid = isEmptyObject(error);\n  const isFormValid = isEmptyObject(errors);\n  const currentFieldError = get(error, name);\n  const existFieldError = get(errors, name);\n\n  if (isFieldValid && validFields.has(name)) {\n    return false;\n  }\n\n  if (\n    isFormValid !== isFieldValid ||\n    (!isFormValid && !existFieldError) ||\n    (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))\n  ) {\n    return true;\n  }\n\n  return currentFieldError && !isSameError(existFieldError, currentFieldError);\n}\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule, ValidationValueMessage } from '../types/form';\n\nconst isValueMessage = (\n  value?: ValidationRule,\n): value is ValidationValueMessage => isObject(value) && !isRegex(value);\n\nexport default (validationData?: ValidationRule) =>\n  isValueMessage(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import { isValidElement } from 'react';\nimport isString from '../utils/isString';\nimport isObject from '../utils/isObject';\nimport { Message } from '../types/form';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || (isObject(value) && isValidElement(value));\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types/form';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default <TFieldValues>(\n  name: InternalFieldName<TFieldValues>,\n  validateAllFieldCriteria: boolean,\n  errors: FlatFieldErrors<TFieldValues>,\n  type: string,\n  message: ValidateResult,\n) => {\n  if (validateAllFieldCriteria) {\n    const error = errors[name];\n\n    return {\n      ...error,\n      types: {\n        ...(error && error.types ? error.types : {}),\n        [type]: message || true,\n      },\n    };\n  }\n\n  return {};\n};\n","import * as React from 'react';\nimport getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport getFieldsValue from './getFieldValue';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport {\n  Field,\n  FieldValues,\n  FieldRefs,\n  Message,\n  FieldError,\n  InternalFieldName,\n  FlatFieldErrors,\n} from '../types/form';\n\nexport default async <TFieldValues extends FieldValues>(\n  fieldsRef: React.MutableRefObject<FieldRefs<TFieldValues>>,\n  validateAllFieldCriteria: boolean,\n  {\n    ref,\n    ref: { type, value },\n    options,\n    required,\n    maxLength,\n    minLength,\n    min,\n    max,\n    pattern,\n    validate,\n  }: Field,\n  unmountFieldsStateRef: React.MutableRefObject<Record<string, any>>,\n): Promise<FlatFieldErrors<TFieldValues>> => {\n  const fields = fieldsRef.current;\n  const name: InternalFieldName<TFieldValues> = ref.name;\n  const error: FlatFieldErrors<TFieldValues> = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty = value === '';\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\n      (isBoolean(value) && !value) ||\n      (isCheckBox && !getCheckboxValue(options).isValid) ||\n      (isRadio && !getRadioValue(options).isValid))\n  ) {\n    const { value: requiredValue, message: requiredMessage } = isMessage(\n      required,\n    )\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (requiredValue) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message: requiredMessage,\n        ref: isRadioOrCheckbox\n          ? ((fields[name] as Field).options || [])[0].ref\n          : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\n    let exceedMax;\n    let exceedMin;\n    const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\n    const { value: minValue, message: minMessage } = getValueAndMessage(min);\n\n    if (type === 'number' || (!type && !isNaN(value))) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(value);\n      if (!isNullOrUndefined(maxValue)) {\n        exceedMax = valueNumber > maxValue;\n      }\n      if (!isNullOrUndefined(minValue)) {\n        exceedMin = valueNumber < minValue;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(value);\n      if (isString(maxValue)) {\n        exceedMax = valueDate > new Date(maxValue);\n      }\n      if (isString(minValue)) {\n        exceedMin = valueDate < new Date(minValue);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxMessage,\n        minMessage,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(value) && !isEmpty && (maxLength || minLength)) {\n    const {\n      value: maxLengthValue,\n      message: maxLengthMessage,\n    } = getValueAndMessage(maxLength);\n    const {\n      value: minLengthValue,\n      message: minLengthMessage,\n    } = getValueAndMessage(minLength);\n    const inputLength = value.toString().length;\n    const exceedMax =\n      !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\n    const exceedMin =\n      !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (pattern && !isEmpty) {\n    const { value: patternValue, message: patternMessage } = getValueAndMessage(\n      pattern,\n    );\n\n    if (isRegex(patternValue) && !patternValue.test(value)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message: patternMessage,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const fieldValue = getFieldsValue(fieldsRef, name, unmountFieldsStateRef);\n    const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(fieldValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(fieldValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types/utils';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isPrimitive from './isPrimitive';\nimport isObject from './isObject';\nimport { FieldValues, InternalFieldName } from '../types/form';\n\nexport const getPath = <TFieldValues extends FieldValues = FieldValues>(\n  path: InternalFieldName<TFieldValues>,\n  values: TFieldValues | any[],\n): any[] => {\n  const getInnerPath = (\n    value: any,\n    key: number | string,\n    isObject?: boolean,\n  ) => {\n    const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\n    return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\n  };\n\n  return Object.entries(values)\n    .map(([key, value]) => getInnerPath(value, key, isObject(values)))\n    .flat(Infinity);\n};\n","import get from '../utils/get';\nimport { getPath } from '../utils/getPath';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isArray from '../utils/isArray';\nimport { DeepPartial } from '../types/utils';\nimport {\n  FieldValue,\n  FieldValues,\n  InternalFieldName,\n  UnpackNestedValue,\n} from '../types/form';\n\nexport default <TFieldValues extends FieldValues>(\n  fieldValues: TFieldValues,\n  fieldName: InternalFieldName<TFieldValues>,\n  watchFields: Set<InternalFieldName<TFieldValues>>,\n  inputValue: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  isSingleField?: boolean,\n):\n  | FieldValue<TFieldValues>\n  | UnpackNestedValue<DeepPartial<TFieldValues>>\n  | undefined => {\n  let value;\n\n  watchFields.add(fieldName);\n\n  if (isEmptyObject(fieldValues)) {\n    value = undefined;\n  } else {\n    value = get(fieldValues, fieldName);\n\n    if (isObject(value) || isArray(value)) {\n      getPath<TFieldValues>(\n        fieldName,\n        value as TFieldValues,\n      ).forEach((name: string) => watchFields.add(name));\n    }\n  }\n\n  return isUndefined(value)\n    ? isSingleField\n      ? inputValue\n      : get(inputValue, fieldName)\n    : value;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n}: {\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isReValidateOnBlur: boolean;\n  isReValidateOnChange: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted: boolean;\n}) => {\n  if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.indexOf('['));\n","import isUndefined from '../utils/isUndefined';\nimport isArray from '../utils/isArray';\n\nexport default function getIsFieldsDifferent(\n  referenceArray: unknown[],\n  differenceArray: unknown[],\n) {\n  if (\n    !isArray<any>(referenceArray) ||\n    !isArray<any>(differenceArray) ||\n    referenceArray.length !== differenceArray.length\n  ) {\n    return true;\n  }\n\n  for (let i = 0; i < referenceArray.length; i++) {\n    const dataA = referenceArray[i];\n    const dataB = differenceArray[i];\n\n    if (\n      isUndefined(dataB) ||\n      Object.keys(dataA).length !== Object.keys(dataB).length\n    ) {\n      return true;\n    }\n\n    for (const key in dataA) {\n      if (dataA[key] !== dataB[key]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n","export const isMatchFieldArrayName = (name: string, searchName: string) =>\n  RegExp(\n    `^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]'),\n  ).test(name);\n\nexport default (names: Set<string>, name: string) =>\n  [...names].some((current) => isMatchFieldArrayName(name, current));\n","import { FieldElement } from '../types/form';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-one`;\n","import { Ref, MutationWatcher } from '../types/form';\nimport isDetached from './isDetached';\n\nexport default function onDomRemove(\n  element: Ref,\n  onDetachCallback: VoidFunction,\n): MutationWatcher {\n  const observer = new MutationObserver((): void => {\n    if (isDetached(element)) {\n      observer.disconnect();\n      onDetachCallback();\n    }\n  });\n\n  observer.observe(window.document, {\n    childList: true,\n    subtree: true,\n  });\n\n  return observer;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types/form';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types/form';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","import * as React from 'react';\nimport attachEventListeners from './logic/attachEventListeners';\nimport transformToNestObject from './logic/transformToNestObject';\nimport focusOnErrorField from './logic/focusOnErrorField';\nimport findRemovedFieldAndRemoveListener from './logic/findRemovedFieldAndRemoveListener';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport shouldRenderBasedOnError from './logic/shouldRenderBasedOnError';\nimport validateField from './logic/validateField';\nimport assignWatchFields from './logic/assignWatchFields';\nimport skipValidation from './logic/skipValidation';\nimport getFieldArrayParentName from './logic/getFieldArrayParentName';\nimport getIsFieldsDifferent from './logic/getIsFieldsDifferent';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isSelectInput from './utils/isSelectInput';\nimport isFileInput from './utils/isFileInput';\nimport isObject from './utils/isObject';\nimport { getPath } from './utils/getPath';\nimport isPrimitive from './utils/isPrimitive';\nimport isFunction from './utils/isFunction';\nimport isArray from './utils/isArray';\nimport isString from './utils/isString';\nimport isSameError from './utils/isSameError';\nimport isUndefined from './utils/isUndefined';\nimport onDomRemove from './utils/onDomRemove';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport modeChecker from './utils/validationModeChecker';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport unique from './utils/unique';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isHTMLElement from './utils/isHTMLElement';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  FieldValue,\n  FieldErrors,\n  Field,\n  FieldRefs,\n  UseFormOptions,\n  ValidationRules,\n  SubmitHandler,\n  FieldElement,\n  FormStateProxy,\n  ReadFormState,\n  Ref,\n  HandleChange,\n  Touched,\n  FieldError,\n  RadioOrCheckboxOption,\n  OmitResetState,\n  DefaultValuesAtRender,\n  FlatFieldErrors,\n  NestedValue,\n  SetValueConfig,\n  ErrorOption,\n} from './types/form';\nimport { LiteralToPrimitive, DeepPartial, NonUndefined } from './types/utils';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\nconst isWeb =\n  typeof document !== UNDEFINED &&\n  !isWindowUndefined &&\n  !isUndefined(window.HTMLElement);\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as UnpackNestedValue<DeepPartial<TFieldValues>>,\n  shouldFocusError = true,\n  shouldUnregister = true,\n  criteriaMode,\n}: UseFormOptions<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs<TFieldValues>>({});\n  const errorsRef = React.useRef<FieldErrors<TFieldValues>>({});\n  const touchedFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const fieldArrayDefaultValues = React.useRef<Record<string, unknown[]>>({});\n  const dirtyFieldsRef = React.useRef<Touched<TFieldValues>>({});\n  const watchFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const watchFieldsHookRef = React.useRef<\n    Record<string, Set<InternalFieldName<TFieldValues>>>\n  >({});\n  const watchFieldsHookRenderRef = React.useRef<Record<string, Function>>({});\n  const fieldsWithValidationRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const validFieldsRef = React.useRef(\n    new Set<InternalFieldName<TFieldValues>>(),\n  );\n  const isValidRef = React.useRef(true);\n  const defaultValuesRef = React.useRef<\n    | FieldValue<UnpackNestedValue<TFieldValues>>\n    | UnpackNestedValue<DeepPartial<TFieldValues>>\n  >(defaultValues);\n  const defaultValuesAtRenderRef = React.useRef(\n    {} as DefaultValuesAtRender<TFieldValues>,\n  );\n  const isUnMount = React.useRef(false);\n  const isWatchAllRef = React.useRef(false);\n  const isSubmittedRef = React.useRef(false);\n  const isDirtyRef = React.useRef(false);\n  const submitCountRef = React.useRef(0);\n  const isSubmittingRef = React.useRef(false);\n  const handleChangeRef = React.useRef<HandleChange>();\n  const unmountFieldsStateRef = React.useRef<Record<string, any>>({});\n  const resetFieldArrayFunctionRef = React.useRef<Record<string, () => void>>(\n    {},\n  );\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<Set<string>>(new Set());\n  const [, render] = React.useState();\n  const {\n    current: { isOnBlur, isOnSubmit, isOnChange, isOnAll },\n  } = React.useRef(modeChecker(mode));\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    isSubmitted: isOnSubmit,\n    submitCount: !isProxyEnabled,\n    touched: !isProxyEnabled,\n    isSubmitting: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n  });\n  const {\n    current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange },\n  } = React.useRef(modeChecker(reValidateMode));\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const reRender = React.useCallback(\n    () => !isUnMount.current && render({}),\n    [],\n  );\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      error: FlatFieldErrors<TFieldValues>,\n      shouldRender: boolean | null = false,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        shouldRenderBasedOnError<TFieldValues>({\n          errors: errorsRef.current,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(errorsRef.current, name);\n\n      if (isEmptyObject(error)) {\n        if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\n          validFieldsRef.current.add(name);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        errorsRef.current = unset(errorsRef.current, name);\n      } else {\n        validFieldsRef.current.delete(name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !isSameError(previousError, error[name] as FieldError);\n\n        set(errorsRef.current, name, error[name]);\n      }\n\n      if (shouldReRender && !isNullOrUndefined(shouldRender)) {\n        reRender();\n        return true;\n      }\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (\n      { ref, options }: Field,\n      rawValue:\n        | FieldValue<TFieldValues>\n        | UnpackNestedValue<DeepPartial<TFieldValues>>\n        | undefined\n        | null\n        | boolean,\n    ) => {\n      const value =\n        isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n          ? ''\n          : rawValue;\n\n      if (isRadioInput(ref) && options) {\n        options.forEach(\n          ({ ref: radioRef }: { ref: HTMLInputElement }) =>\n            (radioRef.checked = radioRef.value === value),\n        );\n      } else if (isFileInput(ref) && !isString(value)) {\n        ref.files = value as FileList;\n      } else if (isMultipleSelect(ref)) {\n        [...ref.options].forEach(\n          (selectRef) =>\n            (selectRef.selected = (value as string).includes(selectRef.value)),\n        );\n      } else if (isCheckBoxInput(ref) && options) {\n        options.length > 1\n          ? options.forEach(\n              ({ ref: checkboxRef }) =>\n                (checkboxRef.checked = (value as string).includes(\n                  checkboxRef.value,\n                )),\n            )\n          : (options[0].ref.checked = !!value);\n      } else {\n        ref.value = value;\n      }\n    },\n    [],\n  );\n\n  const setDirty = React.useCallback(\n    (name: InternalFieldName<TFieldValues>): boolean => {\n      const { isDirty, dirtyFields } = readFormStateRef.current;\n\n      if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\n        return false;\n      }\n\n      const isFieldDirty =\n        defaultValuesAtRenderRef.current[name] !==\n        getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\n      const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n      const previousIsDirty = isDirtyRef.current;\n\n      if (isFieldDirty) {\n        set(dirtyFieldsRef.current, name, true);\n      } else {\n        unset(dirtyFieldsRef.current, name);\n      }\n\n      isDirtyRef.current =\n        (isFieldArray &&\n          getIsFieldsDifferent(\n            get(getValues(), getFieldArrayParentName(name)),\n            get(defaultValuesRef.current, getFieldArrayParentName(name)),\n          )) ||\n        !isEmptyObject(dirtyFieldsRef.current);\n\n      return (\n        (isDirty && previousIsDirty !== isDirtyRef.current) ||\n        (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name))\n      );\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName<TFieldValues>,\n      skipReRender?: boolean,\n    ): Promise<boolean> => {\n      if (fieldsRef.current[name]) {\n        const error = await validateField<TFieldValues>(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          fieldsRef.current[name] as Field,\n          unmountFieldsStateRef,\n        );\n\n        shouldRenderBaseOnError(name, error, skipReRender ? null : false);\n\n        return isEmptyObject(error);\n      }\n\n      return false;\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      payload:\n        | InternalFieldName<TFieldValues>\n        | InternalFieldName<TFieldValues>[],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getValues() as TFieldValues,\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      );\n      const previousFormIsValid = isValidRef.current;\n      isValidRef.current = isEmptyObject(errors);\n\n      if (isArray(payload)) {\n        const isInputsValid = payload\n          .map((name) => {\n            const error = get(errors, name);\n\n            if (error) {\n              set(errorsRef.current, name, error);\n            } else {\n              unset(errorsRef.current, name);\n            }\n\n            return !error;\n          })\n          .every(Boolean);\n\n        reRender();\n\n        return isInputsValid;\n      } else {\n        const error = get(errors, payload);\n\n        shouldRenderBaseOnError(\n          payload,\n          (error ? { [payload]: error } : {}) as FlatFieldErrors<TFieldValues>,\n          previousFormIsValid !== isValidRef.current,\n        );\n\n        return !error;\n      }\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const trigger = React.useCallback(\n    async (\n      name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n    ): Promise<boolean> => {\n      const fields = name || Object.keys(fieldsRef.current);\n\n      if (resolverRef.current) {\n        return executeSchemaOrResolverValidation(fields);\n      }\n\n      if (isArray(fields)) {\n        const result = await Promise.all(\n          fields.map(async (data) => await executeValidation(data, true)),\n        );\n        reRender();\n        return result.every(Boolean);\n      }\n\n      return await executeValidation(fields);\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      getPath(name, value).forEach((fieldName) => {\n        const field = fieldsRef.current[fieldName];\n\n        if (field) {\n          setFieldValue(field, get({ [name]: value }, fieldName));\n\n          if (shouldDirty) {\n            setDirty(fieldName);\n          }\n\n          if (shouldValidate) {\n            trigger(fieldName as FieldName<TFieldValues>);\n          }\n        }\n      });\n    },\n    [trigger, setFieldValue, setDirty],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: InternalFieldName<TFieldValues>,\n      value: FieldValue<TFieldValues> | null | undefined | boolean,\n      config: SetValueConfig,\n    ): boolean | void => {\n      if (fieldsRef.current[name]) {\n        setFieldValue(fieldsRef.current[name] as Field, value);\n        return config.shouldDirty && setDirty(name);\n      } else if (!isPrimitive(value)) {\n        setInternalValues(name, value, config);\n      }\n\n      if (!shouldUnregister) {\n        unmountFieldsStateRef.current[name] = value;\n      }\n\n      return true;\n    },\n    [setDirty, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = (name: string) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const renderWatchedInputs = (name: string, found = true): boolean => {\n    if (!isEmptyObject(watchFieldsHookRef.current)) {\n      for (const key in watchFieldsHookRef.current) {\n        if (\n          name === '' ||\n          watchFieldsHookRef.current[key].has(name) ||\n          watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\n          !watchFieldsHookRef.current[key].size\n        ) {\n          watchFieldsHookRenderRef.current[key]();\n          found = false;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  function setValue<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    value: NonUndefined<TFieldValue> extends NestedValue<infer U>\n      ? U\n      : UnpackNestedValue<DeepPartial<LiteralToPrimitive<TFieldValue>>>,\n    config: SetValueConfig = {},\n  ): void {\n    const shouldRender =\n      setInternalValue(name, value as TFieldValues[string], config) ||\n      isFieldWatched(name);\n\n    renderWatchedInputs(name);\n\n    if (shouldRender) {\n      reRender();\n    }\n\n    if (config.shouldValidate) {\n      trigger(name as any);\n    }\n  }\n\n  handleChangeRef.current = handleChangeRef.current\n    ? handleChangeRef.current\n    : async ({ type, target }: Event): Promise<void | boolean> => {\n        const name = (target as Ref)!.name;\n        const field = fieldsRef.current[name];\n        let error: FlatFieldErrors<TFieldValues>;\n\n        if (field) {\n          const isBlurEvent = type === EVENTS.BLUR;\n          const shouldSkipValidation =\n            !isOnAll &&\n            skipValidation({\n              isOnChange,\n              isOnBlur,\n              isBlurEvent,\n              isReValidateOnChange,\n              isReValidateOnBlur,\n              isSubmitted: isSubmittedRef.current,\n            });\n          let shouldRender = setDirty(name) || isFieldWatched(name);\n\n          if (\n            isBlurEvent &&\n            !get(touchedFieldsRef.current, name) &&\n            readFormStateRef.current.touched\n          ) {\n            set(touchedFieldsRef.current, name, true);\n            shouldRender = true;\n          }\n\n          if (shouldSkipValidation) {\n            renderWatchedInputs(name);\n            return shouldRender && reRender();\n          }\n\n          if (resolver) {\n            const { errors } = await resolver(\n              getValues() as TFieldValues,\n              contextRef.current,\n              isValidateAllFieldCriteria,\n            );\n            const previousFormIsValid = isValidRef.current;\n            isValidRef.current = isEmptyObject(errors);\n\n            error = (get(errors, name)\n              ? { [name]: get(errors, name) }\n              : {}) as FlatFieldErrors<TFieldValues>;\n\n            if (previousFormIsValid !== isValidRef.current) {\n              shouldRender = true;\n            }\n          } else {\n            error = await validateField<TFieldValues>(\n              fieldsRef,\n              isValidateAllFieldCriteria,\n              field,\n              unmountFieldsStateRef,\n            );\n          }\n\n          renderWatchedInputs(name);\n\n          if (!shouldRenderBaseOnError(name, error) && shouldRender) {\n            reRender();\n          }\n        }\n      };\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TFieldName extends string, TFieldValue extends unknown>(\n    name: TFieldName,\n  ): TFieldName extends keyof TFieldValues\n    ? UnpackNestedValue<TFieldValues>[TFieldName]\n    : TFieldValue;\n  function getValues<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function getValues(payload?: string | string[]): unknown {\n    if (isString(payload)) {\n      return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\n    }\n\n    if (isArray(payload)) {\n      return payload.reduce(\n        (previous, name) => ({\n          ...previous,\n          [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef),\n        }),\n        {},\n      );\n    }\n\n    return getFieldsValues(fieldsRef, unmountFieldsStateRef);\n  }\n\n  const validateResolver = React.useCallback(\n    (values = {}) => {\n      resolverRef.current!(\n        {\n          ...defaultValuesRef.current,\n          ...getValues(),\n          ...values,\n        },\n        contextRef.current,\n        isValidateAllFieldCriteria,\n      ).then(({ errors }) => {\n        const previousFormIsValid = isValidRef.current;\n        isValidRef.current = isEmptyObject(errors);\n\n        if (previousFormIsValid !== isValidRef.current) {\n          reRender();\n        }\n      });\n    },\n    [isValidateAllFieldCriteria],\n  );\n\n  const removeFieldEventListener = React.useCallback(\n    (field: Field, forceDelete?: boolean) =>\n      findRemovedFieldAndRemoveListener(\n        fieldsRef,\n        handleChangeRef.current!,\n        field,\n        unmountFieldsStateRef,\n        shouldUnregister,\n        forceDelete,\n      ),\n    [shouldUnregister],\n  );\n\n  const removeFieldEventListenerAndRef = React.useCallback(\n    (field: Field | undefined, forceDelete?: boolean) => {\n      if (\n        field &&\n        (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\n          forceDelete)\n      ) {\n        removeFieldEventListener(field, forceDelete);\n\n        if (shouldUnregister) {\n          [\n            errorsRef,\n            touchedFieldsRef,\n            dirtyFieldsRef,\n            defaultValuesAtRenderRef,\n          ].forEach((data) => unset(data.current, field.ref.name));\n\n          [fieldsWithValidationRef, validFieldsRef].forEach((data) =>\n            data.current.delete(field.ref.name),\n          );\n\n          if (\n            readFormStateRef.current.isValid ||\n            readFormStateRef.current.touched ||\n            readFormStateRef.current.isDirty\n          ) {\n            isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\n            reRender();\n\n            if (resolverRef.current) {\n              validateResolver();\n            }\n          }\n        }\n      }\n    },\n    [validateResolver, removeFieldEventListener],\n  );\n\n  function clearErrors(\n    name?: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    if (name) {\n      (isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(errorsRef.current, inputName),\n      );\n    } else {\n      errorsRef.current = {};\n    }\n\n    reRender();\n  }\n\n  function setError(name: FieldName<TFieldValues>, error: ErrorOption): void {\n    isValidRef.current = false;\n\n    set(errorsRef.current, name, {\n      ...error,\n      ref: (fieldsRef.current[name] || {})!.ref,\n    });\n\n    reRender();\n  }\n\n  const watchInternal = React.useCallback(\n    (\n      fieldNames?: string | string[],\n      defaultValue?: unknown,\n      watchId?: string,\n    ) => {\n      const watchFields = watchId\n        ? watchFieldsHookRef.current[watchId]\n        : watchFieldsRef.current;\n      const combinedDefaultValues = isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : defaultValue;\n      const fieldValues = getFieldsValues<TFieldValues>(\n        fieldsRef,\n        unmountFieldsStateRef,\n        fieldNames,\n      );\n\n      if (isString(fieldNames)) {\n        return assignWatchFields<TFieldValues>(\n          fieldValues,\n          fieldNames,\n          watchFields,\n          isUndefined(defaultValue)\n            ? get(combinedDefaultValues, fieldNames)\n            : (defaultValue as UnpackNestedValue<DeepPartial<TFieldValues>>),\n          true,\n        );\n      }\n\n      if (isArray(fieldNames)) {\n        return fieldNames.reduce(\n          (previous, name) => ({\n            ...previous,\n            [name]: assignWatchFields<TFieldValues>(\n              fieldValues,\n              name,\n              watchFields,\n              combinedDefaultValues as UnpackNestedValue<\n                DeepPartial<TFieldValues>\n              >,\n            ),\n          }),\n          {},\n        );\n      }\n\n      if (isUndefined(watchId)) {\n        isWatchAllRef.current = true;\n      }\n\n      return transformToNestObject(\n        (!isEmptyObject(fieldValues) && fieldValues) ||\n          (combinedDefaultValues as FieldValues),\n      );\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<\n    TFieldName extends string,\n    TFieldValue extends TFieldValues[TFieldName]\n  >(\n    name: TFieldName,\n    defaultValue?: UnpackNestedValue<LiteralToPrimitive<TFieldValue>>,\n  ): UnpackNestedValue<LiteralToPrimitive<TFieldValue>>;\n  function watch<TFieldName extends keyof TFieldValues>(\n    names: TFieldName[],\n    defaultValues?: UnpackNestedValue<\n      DeepPartial<Pick<TFieldValues, TFieldName>>\n    >,\n  ): UnpackNestedValue<Pick<TFieldValues, TFieldName>>;\n  function watch(\n    names: string[],\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): UnpackNestedValue<DeepPartial<TFieldValues>>;\n  function watch(\n    fieldNames?: string | string[],\n    defaultValue?: unknown,\n  ): unknown {\n    return watchInternal(fieldNames, defaultValue);\n  }\n\n  function unregister(\n    name: FieldName<TFieldValues> | FieldName<TFieldValues>[],\n  ): void {\n    (isArray(name) ? name : [name]).forEach((fieldName) =>\n      removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true),\n    );\n  }\n\n  function registerFieldRef<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: TFieldElement & Ref,\n    validateOptions: ValidationRules | null = {},\n  ): ((name: InternalFieldName<TFieldValues>) => void) | void {\n    if (process.env.NODE_ENV !== 'production' && !ref.name) {\n      // eslint-disable-next-line no-console\n      return console.warn('Missing name @', ref);\n    }\n\n    const { name, type, value } = ref;\n    const fieldRefAndValidationOptions = {\n      ref,\n      ...validateOptions,\n    };\n    const fields = fieldsRef.current;\n    const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n    let field = fields[name] as Field;\n    let isEmptyDefaultValue = true;\n    let isFieldArray;\n    let defaultValue;\n\n    if (\n      field &&\n      (isRadioOrCheckbox\n        ? isArray(field.options) &&\n          unique(field.options).find((option) => {\n            return value === option.ref.value && option.ref === ref;\n          })\n        : ref === field.ref)\n    ) {\n      fields[name] = {\n        ...field,\n        ...validateOptions,\n      };\n      return;\n    }\n\n    if (type) {\n      const mutationWatcher = onDomRemove(ref, () =>\n        removeFieldEventListenerAndRef(field),\n      );\n\n      field = isRadioOrCheckbox\n        ? {\n            options: [\n              ...unique((field && field.options) || []),\n              {\n                ref,\n                mutationWatcher,\n              } as RadioOrCheckboxOption,\n            ],\n            ref: { type, name },\n            ...validateOptions,\n          }\n        : {\n            ...fieldRefAndValidationOptions,\n            mutationWatcher,\n          };\n    } else {\n      field = fieldRefAndValidationOptions;\n    }\n\n    fields[name] = field;\n\n    const isEmptyUnmountFields = isUndefined(\n      get(unmountFieldsStateRef.current, name),\n    );\n\n    if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\n      defaultValue = get(\n        isEmptyUnmountFields\n          ? defaultValuesRef.current\n          : unmountFieldsStateRef.current,\n        name,\n      );\n      isEmptyDefaultValue = isUndefined(defaultValue);\n      isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n\n      if (!isEmptyDefaultValue && !isFieldArray) {\n        setFieldValue(field, defaultValue);\n      }\n    }\n\n    if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\n      validateResolver();\n    } else if (!isEmptyObject(validateOptions)) {\n      fieldsWithValidationRef.current.add(name);\n\n      if (!isOnSubmit && readFormStateRef.current.isValid) {\n        validateField(\n          fieldsRef,\n          isValidateAllFieldCriteria,\n          field,\n          unmountFieldsStateRef,\n        ).then((error) => {\n          const previousFormIsValid = isValidRef.current;\n\n          isEmptyObject(error)\n            ? validFieldsRef.current.add(name)\n            : (isValidRef.current = false);\n\n          if (previousFormIsValid !== isValidRef.current) {\n            reRender();\n          }\n        });\n      }\n    }\n\n    if (\n      !defaultValuesAtRenderRef.current[name] &&\n      !(isFieldArray && isEmptyDefaultValue)\n    ) {\n      const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\n      defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\n        ? isObject(fieldValue)\n          ? { ...fieldValue }\n          : fieldValue\n        : defaultValue;\n    }\n\n    if (type) {\n      attachEventListeners(\n        isRadioOrCheckbox && field.options\n          ? field.options[field.options.length - 1]\n          : field,\n        isRadioOrCheckbox || isSelectInput(ref),\n        handleChangeRef.current,\n      );\n    }\n  }\n\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    rules?: ValidationRules,\n  ): (ref: (TFieldElement & Ref) | null) => void;\n  function register(\n    name: FieldName<TFieldValues>,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    ref: (TFieldElement & Ref) | null,\n    rules?: ValidationRules,\n  ): void;\n  function register<TFieldElement extends FieldElement<TFieldValues>>(\n    refOrValidationOptions?:\n      | FieldName<TFieldValues>\n      | ValidationRules\n      | (TFieldElement & Ref)\n      | null,\n    rules?: ValidationRules,\n  ): ((ref: (TFieldElement & Ref) | null) => void) | void {\n    if (!isWindowUndefined) {\n      if (isString(refOrValidationOptions)) {\n        registerFieldRef({ name: refOrValidationOptions }, rules);\n      } else if (\n        isObject(refOrValidationOptions) &&\n        'name' in refOrValidationOptions\n      ) {\n        registerFieldRef(refOrValidationOptions, rules);\n      } else {\n        return (ref: (TFieldElement & Ref) | null) =>\n          ref && registerFieldRef(ref, refOrValidationOptions);\n      }\n    }\n  }\n\n  const handleSubmit = React.useCallback(\n    <TSubmitFieldValues extends FieldValues = TFieldValues>(\n      callback: SubmitHandler<TSubmitFieldValues>,\n    ) => async (e?: React.BaseSyntheticEvent): Promise<void> => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldErrors: FieldErrors<TFieldValues> = {};\n      let fieldValues: FieldValues = getValues();\n\n      if (readFormStateRef.current.isSubmitting) {\n        isSubmittingRef.current = true;\n        reRender();\n      }\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues as TFieldValues,\n            contextRef.current,\n            isValidateAllFieldCriteria,\n          );\n          errorsRef.current = errors;\n          fieldErrors = errors;\n          fieldValues = values;\n        } else {\n          for (const field of Object.values(fieldsRef.current)) {\n            if (field) {\n              const {\n                ref: { name },\n              } = field;\n\n              const fieldError = await validateField(\n                fieldsRef,\n                isValidateAllFieldCriteria,\n                field,\n                unmountFieldsStateRef,\n              );\n\n              if (fieldError[name]) {\n                set(fieldErrors, name, fieldError[name]);\n                validFieldsRef.current.delete(name);\n              } else if (fieldsWithValidationRef.current.has(name)) {\n                unset(errorsRef.current, name);\n                validFieldsRef.current.add(name);\n              }\n            }\n          }\n        }\n\n        if (\n          isEmptyObject(fieldErrors) &&\n          Object.keys(errorsRef.current).every((name) =>\n            Object.keys(fieldsRef.current).includes(name),\n          )\n        ) {\n          errorsRef.current = {};\n          reRender();\n          await callback(\n            fieldValues as UnpackNestedValue<TSubmitFieldValues>,\n            e,\n          );\n        } else {\n          errorsRef.current = {\n            ...errorsRef.current,\n            ...fieldErrors,\n          };\n          if (shouldFocusError) {\n            focusOnErrorField(fieldsRef.current, fieldErrors);\n          }\n        }\n      } finally {\n        isSubmittedRef.current = true;\n        isSubmittingRef.current = false;\n        submitCountRef.current = submitCountRef.current + 1;\n        reRender();\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria],\n  );\n\n  const resetRefs = ({\n    errors,\n    isDirty,\n    isSubmitted,\n    touched,\n    isValid,\n    submitCount,\n    dirtyFields,\n  }: OmitResetState) => {\n    fieldsRef.current = {};\n    if (!errors) {\n      errorsRef.current = {};\n    }\n\n    if (!touched) {\n      touchedFieldsRef.current = {};\n    }\n\n    if (!isValid) {\n      validFieldsRef.current = new Set();\n      fieldsWithValidationRef.current = new Set();\n      isValidRef.current = true;\n    }\n\n    if (!isDirty) {\n      isDirtyRef.current = false;\n    }\n\n    if (!dirtyFields) {\n      dirtyFieldsRef.current = {};\n    }\n\n    if (!isSubmitted) {\n      isSubmittedRef.current = false;\n    }\n\n    if (!submitCount) {\n      submitCountRef.current = 0;\n    }\n\n    defaultValuesAtRenderRef.current = {} as DefaultValuesAtRender<\n      TFieldValues\n    >;\n    fieldArrayDefaultValues.current = {};\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n  };\n\n  const reset = (\n    values?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n    omitResetState: OmitResetState = {},\n  ): void => {\n    if (isWeb) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field) {\n          const { ref, options } = field;\n          const inputRef =\n            isRadioOrCheckboxFunction(ref) && isArray(options)\n              ? options[0].ref\n              : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    if (values) {\n      defaultValuesRef.current = values;\n      renderWatchedInputs('');\n    }\n\n    unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\n\n    Object.values(resetFieldArrayFunctionRef.current).forEach(\n      (resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray(),\n    );\n\n    resetRefs(omitResetState);\n\n    reRender();\n  };\n\n  React.useEffect(() => {\n    isUnMount.current = false;\n\n    return () => {\n      isUnMount.current = true;\n      fieldsRef.current &&\n        process.env.NODE_ENV === 'production' &&\n        Object.values(fieldsRef.current).forEach((field) =>\n          removeFieldEventListenerAndRef(field, true),\n        );\n    };\n  }, [removeFieldEventListenerAndRef]);\n\n  if (!resolver) {\n    isValidRef.current =\n      validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\n      isEmptyObject(errorsRef.current);\n  }\n\n  const formState = {\n    dirtyFields: dirtyFieldsRef.current,\n    isSubmitted: isSubmittedRef.current,\n    submitCount: submitCountRef.current,\n    touched: touchedFieldsRef.current,\n    isDirty: isDirtyRef.current,\n    isSubmitting: isSubmittingRef.current,\n    isValid: isOnSubmit\n      ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\n      : isValidRef.current,\n  };\n\n  const commonProps = {\n    trigger,\n    setValue: React.useCallback(setValue, [\n      reRender,\n      setInternalValue,\n      trigger,\n    ]),\n    getValues: React.useCallback(getValues, []),\n    register: React.useCallback(register, [defaultValuesRef.current]),\n    unregister: React.useCallback(unregister, []),\n    formState: isProxyEnabled\n      ? new Proxy<FormStateProxy<TFieldValues>>(formState, {\n          get: (obj, prop: keyof FormStateProxy) => {\n            if (prop in obj) {\n              readFormStateRef.current[prop] = true;\n              return obj[prop];\n            }\n\n            return undefined;\n          },\n        })\n      : formState,\n  };\n\n  const control = {\n    removeFieldEventListener,\n    renderWatchedInputs,\n    watchInternal,\n    reRender,\n    ...(resolver ? { validateSchemaIsValid: validateResolver } : {}),\n    mode: {\n      isOnBlur,\n      isOnSubmit,\n      isOnChange,\n    },\n    reValidateMode: {\n      isReValidateOnBlur,\n      isReValidateOnChange,\n    },\n    errorsRef,\n    touchedFieldsRef,\n    fieldsRef,\n    isWatchAllRef,\n    watchFieldsRef,\n    resetFieldArrayFunctionRef,\n    watchFieldsHookRef,\n    watchFieldsHookRenderRef,\n    fieldArrayDefaultValues,\n    validFieldsRef,\n    dirtyFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayNamesRef,\n    isDirtyRef,\n    isSubmittedRef,\n    readFormStateRef,\n    defaultValuesRef,\n    unmountFieldsStateRef,\n    ...commonProps,\n  };\n\n  return {\n    watch,\n    control,\n    handleSubmit,\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    setError: React.useCallback(setError, []),\n    errors: errorsRef.current,\n    ...commonProps,\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues } from './types/form';\nimport { FormProviderProps } from './types/props';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  React.useContext(FormContext) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={{ ...props } as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n"],"sourceRoot":""}